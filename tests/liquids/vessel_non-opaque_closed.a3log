

Liquid Tests 
Testing liquids behavior. 
(C) 2020 by Tristano Ajmone 
Programmed with the ALAN Interactive Fiction Language v3.0 beta7.
Standard Library v2.2.0 
Version 1 
All rights reserved. 

Welcome to the ALAN StdLib's "Liquids Test Laboratory," a private
research facility founded by Anssi Räisänen with funds from the
"International ALAN Foundation" and from IF-tycoon Thomas Nilefalk.


Liquids Test Laboratory
There is a table here. On the table you see a can, a bottle and a jar. 
Anssi Räisänen is here, waiting to assist you.

> ; ******************************************************************************
> ; *                                                                            *
> ; *                  TEST LIQUID IN NON-OPAQUE CLOSED VESSEL                   *
> ; *                                                                            *
> ; ******************************************************************************
> ; This solution stress-tests liquids with non-OPAQUE vessels. The StdLib tends
> ; to assume that all closed containers will also be OPAQUE, but this might not
> ; always be the case, due to either:
> ;
> ;  * The author forgetting to add `OPAQUE CONTAINER` in a vessel definition
> ;    (LISTED_CONTAINER doesn't default to OPAQUE).
> ;  * Because the vessel is transparent (e.g. glass) and the author wishes that
> ;    its contents are visible even when it's closed.
> ;
> ; Although the Library doesn't explicitly cover transparent containers, these
> ; tests should at least reveal unexpected behaviors, and prepare the ground for
> ; the introduction of a `transparent` attribute allowing proper handling of
> ; see-through containers.
> ; ==============================================================================
> ; WINE BOTTLE (LISTED_CONTAINER: non-OPAQUE + closed + `ex`)
> ; ==============================================================================
> ask Anssi about wine bottle
The wine bottle is a non-OPAQUE LISTED_CONTAINER, allowing to see what's
inside it even when closed. It starts off as being closed and requires
the corkscrew to be opened (it's not a `matching_key`, the bottle simply
defines a custom CHECK on `open`). When you open it, its cork will appear
in your inventory, and you'll need to posses it in order to close the
bottle again; when you close the bottle, the cork disappears. 
Both the bottle and the wine inside it have `ex` descriptions.

> ; The bottle has an 'ex' attribute, it should be honored:
> ; The bottle is closed, it should be mentioned:
> x bottle
It's a wine bottle, French, and probably good quality too. The bottle
contains some wine.

> ; **ERROR** 'should mention if it's open or closed!
> ; The wine shouldn't be accessible since it's closed:
> x wine
You can't see what's inside the bottle, since it's closed.

> ; **NOTE** ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
> ;          The wine is not out of scope, because the bottle is non-OPAQUE.
> ;          It's just the 'examine' verb that is CHECKing wether its vessel
> ;          is open or not!
> ; **TRANSPARENCY NOTE** ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
> ;          Since the vesses is not OPAQUE, we might expect 'examine' to reveal
> ;          something about its contents -- how much and how, is something that
> ;          needs yet to be discussed.
> ; ==============================================================================
> ; TEST CLOSED-BOTTLE ACTIONS -> on VESSEL
> ; ==============================================================================
> ; The following actions should fail due to the liquid's vessel being closed...
> ; ------------------------------------------------------------------------------
> ; TEST PASSED
> ; ------------------------------------------------------------------------------
> pour bottle
You can't, since the bottle is closed.

> ; ==============================================================================
> ; TEST CLOSED-BOTTLE ACTIONS -> on LIQUID
> ; ==============================================================================
> ; The following actions should fail due to the liquid's vessel being closed...
> ; ------------------------------------------------------------------------------
> ; TEST PASSED
> ; ------------------------------------------------------------------------------
> pour bottle
You can't, since the bottle is closed.

> ; ------------------------------------------------------------------------------
> ; TEST FAILED
> ; ------------------------------------------------------------------------------
> pour wine
(taking the bottle of wine first)
You pour the wine on the floor.

> ; **BUG** Add appropriate CHECKs to `pour` on `liquid` class!
> XYZZY
Thanks to the magic words, now all test equipment in this place has been
restored to its initial state!

> drink wine
You drink all of the wine.

> ; **BUG** Add appropriate CHECKs to `drink` in 'lib_verbs.i'!
> 

Do you want to RESTART, RESTORE, QUIT or UNDO? 
